[project]
name = "e3_e4"
version = "0.1.0"
description = "CollibrIA - Serverless SQL Agent with AWS Bedrock"
readme = "README.md"
requires-python = "==3.12.*"
dependencies = [
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "python-dotenv>=1.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/e3_e4"]

[tool.uv]
dev-dependencies = [
    "pre-commit>=3.5.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
    "ipython>=8.18.0",
]

[tool.ruff]
# Minimal but efficient configuration
line-length = 100
target-version = "py312"

[tool.ruff.lint]
# Focus on the most important rules
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "SIM", # flake8-simplify
    "DTZ", # flake8-datetimez
    "LOG", # flake8-logging
    "RUF", # Ruff-specific rules
]
ignore = [
    "E501", # line too long (handled by formatter)
    "B008", # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"] # Allow assert in tests

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "--strict-markers",
    "--cov=src/e3_e4",
    "--cov-report=term-missing",
    "--cov-report=html",
    "-v",
]
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
exclude = ["tests/*"]

[tool.coverage.run]
source = ["src/e3_e4"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]
